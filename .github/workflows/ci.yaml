name: CI
on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
  workflow_dispatch: # allows you to trigger manually

jobs:
  test_on_x86:
    name: ${{ matrix.os }} py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        # Bookend python versions
        python-version: ["3.7"]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags.
      - name: Set environment variables
        run: |
          if [[ ${{ matrix.os }} == windows* ]] ;
          then
            echo "CONDA_ENV_FILE=ci/requirements/environment-windows.yml" >> $GITHUB_ENV
          else
            echo "CONDA_ENV_FILE=ci/requirements/environment.yml" >> $GITHUB_ENV

          fi
          echo "PYTHON_VERSION=${{ matrix.python-version }}" >> $GITHUB_ENV

      - name: Cache conda
        uses: actions/cache@v2
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-py${{ matrix.python-version }}-${{
            hashFiles('ci/requirements/**.yml') }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          channels: conda-forge
          channel-priority: strict
          mamba-version: "*"
          activate-environment: xarray-tests
          auto-update-conda: false
          python-version: ${{ matrix.python-version }}
          use-only-tar-bz2: true

      - name: Install conda dependencies
        run: |
          mamba env update -f $CONDA_ENV_FILE

      - name: Install xarray
        run: |
          python -m pip install --no-deps -e .

      - name: Version info
        run: |
          conda info -a
          conda list
          python xarray/util/print_versions.py
      - name: Import xarray
        run: |
          python -c "import xarray"
      - name: Run tests
        run: python -m pytest -n 4
          --cov=xarray
          --cov-report=xml
          --junitxml=pytest.xml


  armv64_job:
      name: Build and Test for arm64
      strategy:
        matrix:
          pyver: [cp37-cp37m]
      runs-on: ubuntu-18.04
      env:
        py: /opt/python/${{ matrix.pyver }}/bin/python
        img: quay.io/pypa/manylinux2014_aarch64  
    
      steps:
        - uses: actions/checkout@v2
        - name: Set up QEMU
          id: qemu
          uses: docker/setup-qemu-action@v1
      
        - name: Install and Run tests
          run: |
            docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
              ${{ env.img }} \
              bash -exc '${{ env.py }} -m pip install virtualenv && ${{ env.py }} -m venv .env && \
              source .env/bin/activate && \
              yum install -y dnf 
              dnf install -y wget
              
              python -m pip install --upgrade pip && \
              python --version && \
              uname -m && \
              whoami && \
              wget -q "https://github.com/conda-forge/miniforge/releases/download/4.10.2-0/Mambaforge-4.10.2-0-Linux-aarch64.sh" -O miniconda.sh && \
              chmod +x miniconda.sh && \
              ./miniconda.sh -u -b -p $HOME/miniconda3 && \
              export PATH=$HOME/miniconda3/bin:$PATH && \
              ~/miniconda3/bin/conda install conda-build -y && \
              ~/miniconda3/bin/conda create -q -y --name testenv python=3.7 cython numpy pytest psutil pip && \
              source ~/miniconda3/bin/activate testenv && \
              conda --version && \
              python --version && \
              pwd && \
              ls && \
              mamba env update -f ci/requirements/environment.yml && \

              chmod +x /usr/local/lib/python3.8/dist-packages/test-easy-install-2343.write-test && \
              sudo python -m pip install --no-deps -e . && \
              conda info -a && \
              conda list && \
              python xarray/util/print_versions.py && \
              conda install pandas typing_extensions && \
              python -m pytest && \
              
              deactivate'
  
